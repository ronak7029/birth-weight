#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Mar  6 16:49:23 2019

@author: ronak
"""

# Loading Libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import statsmodels.formula.api as smf # regression modeling

file= 'bw.xls'

df = pd.read_excel(file)





########################
# Fundamental Dataset Exploration
########################

# Column names
df.columns


# Displaying the first rows of the DataFrame
print(df.head())


# Dimensions of the DataFrame
df.shape


# Information about each variable
df.info()


# Descriptive statistics
df.describe().round(2)


df.sort_values('dfght', ascending = False)



## Value Counts of each Var

# MOther White (53) 
df['mwhte'].value_counts()

# MOther Black (75)
df['mblck'].value_counts()

## Mother Other (68)
df['moth'].value_counts()

## Father White  (68)
df['fwhte'].value_counts()

## Father BLack (67)
df['fblck'].value_counts()


##### Father Other (61)
df['foth'].value_counts()

#####
#df.corr()
#df.corr.loc[: , 'bwght'].sor_values(ascending = False)

###############################################################################
# Imputing Missing Values
###############################################################################

print(
      df
      .isnull()
      .sum()
      )

print(
      df
      .isnull()
      .any()
      .any()
      )


for col in df:

    """ Create columns that are 0s if a value was not missing and 1 if
    a value is missing. """
    
    if df[col].isnull().any():
        df['m_'+col] = df[col].isnull().astype(int)
        
        
        
        
#############
# Replacing Missing Vals
#Mother Education
fill = df['meduc'].median()

df['meduc'] = df['meduc'].fillna(fill)      

##########
# Number prenatal visits

fill = df['npvis'].mean()
df['npvis'] = df['npvis'].fillna(fill)    

####################
# Father Education
fill = df['feduc'].median()

df['feduc'] = df['feduc'].fillna(fill)      
        

print(
      df
      .isnull()
      .any()
      .any()
      )


###############################################################################
# Outlier Analysis
###############################################################################

df_quantiles = df.loc[:, :].quantile([0.20,
                                                0.40,
                                                0.60,
                                                0.80,
                                                1.00])

    
print(df_quantiles)


##############################################################################
# Determine distribution of our categorical vars which became binary
##############################################################################






###############################################################################
# Test to check distribution of vars with missing values
###############################################################################

plt.subplot(2, 2, 1)
sns.distplot(df['meduc'],
             bins = 16,
             color = 'g')

plt.xlabel('Mother Edu')


########################


plt.subplot(2, 2, 2)
sns.distplot(df['npvis'],
             bins = 20,
             color = 'y',
             )

plt.xlabel('Num Prenatal Visit')



########################


plt.subplot(2, 2, 3)
sns.distplot(df['feduc'],
             bins = 16,
             color = 'orange')

plt.xlabel('Father Edu')



########################


plt.subplot(2, 2, 4)

sns.distplot(df['bwght'],
             bins = 50,
             color = 'r')

plt.xlabel('birthweight')



plt.tight_layout()
#plt.savefig('Housing Data Histograms 1 of 5.png')

plt.show()


sns.distplot(df['monpre'],
             bins = 50,
             color = 'r')

plt.xlabel('prenatal care')


df.corr()


###############################################################
# Scatterplots of race against birthweight
#Saving Scatterplots that we want to analyze and use 
sns.lmplot(x = 'moth',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'cigs',
   
           palette = 'plasma')

plt.show()

sns.lmplot(x = 'mwhte',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'cigs',
   
           palette = 'plasma')

plt.show()

sns.lmplot(x = 'mblck',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'cigs',
   
           palette = 'plasma')

plt.show()


sns.lmplot(x = 'moth',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'drink',
   
           palette = 'plasma')

plt.show()


sns.lmplot(x = 'mwhte',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'drink',
   
           palette = 'plasma')

plt.show()

sns.lmplot(x = 'mblck',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'drink',
   
           palette = 'plasma')

plt.show()


sns.lmplot(x = 'moth',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'mage',
   
           palette = 'plasma')

plt.show()

sns.lmplot(x = 'mwhte',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'mage',
   
           palette = 'plasma')

plt.show()

sns.lmplot(x = 'mblck',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'mage',
   
           palette = 'plasma')

plt.show()

#################################
#Plots of birthweight/cigs/drinks
#################################
""" 
We can find a distinct negative correlation between birhtweight and the 
use of alcohol or cigarettes
"""
sns.lmplot(x = 'drink',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'cigs',
   
           palette = 'plasma')

plt.show()

sns.lmplot(x = 'cigs',
           y = 'bwght',
           data = df,
           fit_reg = False,
           hue= 'drink',
   
           palette = 'plasma')

plt.show()





#############################################################################
# FULL MODEL
###########################################################################


lm_full = smf.ols(formula = """bwght ~ df['mage']+
                                      df['meduc']+ 
                                       df['monpre']+ 
                                        df['npvis']+ 
                                         df['fage']+ 
                                         df['feduc']+
                                          df['omaps']+
                                           df['fmaps']+
                                          df['cigs']+ 
                                           df['drink']+ 
                                            df['male']+ 
                                             df['mwhte']+ 
                                              df['mblck']+ 
                                               df['moth']+ 
                                                df['fwhte']+ 
                                                 df['fblck']+ 
                                                  df['foth'] 
                                                                                                    
                                           """,
                         data = df)


# Fitting Results
results = lm_full.fit()



# Printing Summary Statistics
print(results.summary())


###########################################################################
#Reducded 1
###########################################################################


lm_full = smf.ols(formula = """bwght ~ df['mage']+
                                       df['cigs']+ 
                                       df['drink']+                                             
                                       df['mwhte']+ 
                                       df['mblck']+ 
                                       df['moth']+ 
                                       df['fwhte']+ 
                                       df['fblck']+ 
                                       df['foth'] 
                                                                                                    
                                           """,
                         data = df)


# Fitting Results
results = lm_full.fit()



# Printing Summary Statistics
print(results.summary())


########################################################
# R2
########################################################



lm_full = smf.ols(formula = """bwght ~ df['mage']+
                                    
                                         
                                          
                                          df['cigs']+ 
                                           df['drink']+ 
                                            
                                             df['mwhte']+ 
                                              df['mblck']+ 
                                               df['moth'] 
                                                
                                               
                                                                                                    
                                           """,
                         data = df)


# Fitting Results
results = lm_full.fit()



# Printing Summary Statistics
print(results.summary())


#######################################################################
### SIMPLEST REGRESSION MODEL USING dfGHT AS A CONTINUOUS VAR
lm_full = smf.ols(formula = """bwght ~    df['mage']+
                                          df['cigs']+ 
                                          df['drink']
                                          
                                       
                                        
                                          
                                                  """,
                                      
                         data = df)


# Fitting Results
results = lm_full.fit()



# Printing Summary Statistics
print(results.summary())

"""
We can see the model above with only 3 variables can predict birthweight as a continous variable.
However we must convert birthweight into a binary variable to conduct a logistic
regression to analyze the probablity a baby will have low birthweight dependent
on the genetics of the father/mother and as well as the use of drugs and
the use of medical care whilest pregnant. 
"""

#######################################################################
#RECODING dfGHT INTO A BINARY FOR LOGISTIC REGRESSION
#######################################################################



